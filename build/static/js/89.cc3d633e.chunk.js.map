{"version":3,"file":"static/js/89.cc3d633e.chunk.js","mappings":"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","sources":["components/settings/modals/WhatsAppConfigModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, TextField, Button, Alert, CircularProgress, DialogActions } from '@mui/material';\nimport axios from 'axios';\nimport { doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../../../firebase/config';\nimport { useAuth } from '../../../context/AuthContext';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\nconst WhatsAppConfigModal = ({ onClose }) => {\n  const [phone, setPhone] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n  const { user, reloadUser } = useAuth();\n\n  const validatePhone = (number) => /^\\+[1-9]\\d{10,14}$/.test(number);\n\n  const handleTest = async () => {\n    setAlert(null);\n    if (!validatePhone(phone)) {\n      setAlert({ type: 'error', message: 'N칰mero de WhatsApp inv치lido (usa formato internacional)' });\n      return;\n    }\n    if (!apiKey.trim()) {\n      setAlert({ type: 'error', message: 'API Key es requerida' });\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_URL}/api/notifications/test-whatsapp`, {\n        phone,\n        message: '游댒 Prueba de notificaci칩n POS-NT',\n        apiKey\n      });\n      if (response.data.success) {\n        setAlert({ type: 'success', message: 'Mensaje de prueba enviado correctamente' });\n      } else {\n        setAlert({ type: 'error', message: response.data.error });\n      }\n    } catch (error) {\n      setAlert({ type: 'error', message: error.response?.data?.error || 'Error al enviar mensaje' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSave = async () => {\n    setAlert(null);\n    if (!validatePhone(phone)) {\n      setAlert({ type: 'error', message: 'N칰mero de WhatsApp inv치lido (usa formato internacional)' });\n      return;\n    }\n    if (!apiKey.trim()) {\n      setAlert({ type: 'error', message: 'API Key es requerida' });\n      return;\n    }\n    try {\n      const userRef = doc(db, 'users', user.uid);\n      await updateDoc(userRef, {\n        whatsapp: {\n          number: phone,\n          apiKey: apiKey\n        }\n      });\n      console.log('Configuraci칩n de WhatsApp guardada en Firestore');\n      if (typeof reloadUser === 'function') {\n        await reloadUser();\n        console.log('Usuario tras reloadUser:', user);\n      }\n      // Forzar recarga de la p치gina para asegurar que el contexto se actualiza\n      setTimeout(() => {\n        window.location.reload();\n      }, 500);\n      setAlert({ type: 'success', message: 'Configuraci칩n guardada correctamente' });\n    } catch (error) {\n      console.error('Error al guardar configuraci칩n de WhatsApp:', error);\n      setAlert({ type: 'error', message: 'Error al guardar configuraci칩n' });\n    }\n  };\n\n  return (\n    <Box sx={{ p: 3, minWidth: 350 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Configuraci칩n de WhatsApp\n      </Typography>\n      <Typography variant=\"body2\" sx={{ mb: 2 }}>\n        1. Guarda el n칰mero <b>+34 644 51 95 23</b> en tus contactos como \"CallMeBot\".<br />\n        2. Env칤a el mensaje <b>\"I allow callmebot to send me messages\"</b> a ese n칰mero.<br />\n        3. Recibir치s tu API Key por WhatsApp.<br />\n        4. Ingresa tu n칰mero y API Key aqu칤.\n      </Typography>\n      {alert && (\n        <Alert severity={alert.type} sx={{ mb: 2 }}>\n          {alert.message}\n        </Alert>\n      )}\n      <TextField\n        fullWidth\n        label=\"N칰mero de WhatsApp\"\n        value={phone}\n        onChange={e => setPhone(e.target.value)}\n        placeholder=\"+18091234567\"\n        margin=\"normal\"\n      />\n      <TextField\n        fullWidth\n        label=\"API Key de CallMeBot\"\n        value={apiKey}\n        onChange={e => setApiKey(e.target.value)}\n        margin=\"normal\"\n        type=\"password\"\n      />\n      <DialogActions>\n        <Button onClick={onClose}>Cerrar</Button>\n        <Button\n          variant=\"outlined\"\n          onClick={handleSave}\n          disabled={loading}\n        >\n          Guardar\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleTest}\n          disabled={loading}\n        >\n          {loading ? <CircularProgress size={20} /> : 'Enviar Mensaje de Prueba'}\n        </Button>\n      </DialogActions>\n    </Box>\n  );\n};\n\nexport default WhatsAppConfigModal;"],"names":["_ref","onClose","phone","setPhone","useState","apiKey","setApiKey","loading","setLoading","alert","setAlert","user","reloadUser","useAuth","validatePhone","number","test","_jsxs","Box","sx","p","minWidth","children","_jsx","Typography","variant","mb","Alert","severity","type","message","TextField","fullWidth","label","value","onChange","e","target","placeholder","margin","DialogActions","Button","onClick","async","trim","userRef","doc","db","uid","updateDoc","whatsapp","console","log","setTimeout","window","location","reload","error","disabled","response","axios","post","data","success","_error$response","_error$response$data","CircularProgress","size"],"sourceRoot":""}