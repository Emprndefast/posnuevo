{"version":3,"file":"static/js/85.8e820df1.chunk.js","mappings":"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","sources":["components/settings/modals/ImpresoraConfigModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Typography, Button, Stack, TextField, FormControl, InputLabel, Select, MenuItem, Snackbar, Alert } from '@mui/material';\r\n\r\nconst ImpresoraConfigModal = ({ onClose }) => {\r\n  const [form, setForm] = useState({\r\n    type: 'thermal',\r\n    connection: 'usb',\r\n    paperSize: '80mm',\r\n    copies: 1\r\n  });\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n\r\n  const handleChange = (field) => (e) => {\r\n    setForm({ ...form, [field]: e.target.value });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setSnackbar({ open: true, message: 'Configuración guardada correctamente', severity: 'success' });\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n        Configuración de Impresora\r\n      </Typography>\r\n      <Stack spacing={2}>\r\n        <FormControl fullWidth size=\"small\">\r\n          <InputLabel>Tipo de impresora</InputLabel>\r\n          <Select value={form.type} onChange={handleChange('type')} label=\"Tipo de impresora\">\r\n            <MenuItem value=\"thermal\">Térmica</MenuItem>\r\n            <MenuItem value=\"inkjet\">Inyección de tinta</MenuItem>\r\n            <MenuItem value=\"laser\">Láser</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl fullWidth size=\"small\">\r\n          <InputLabel>Conexión</InputLabel>\r\n          <Select value={form.connection} onChange={handleChange('connection')} label=\"Conexión\">\r\n            <MenuItem value=\"usb\">USB</MenuItem>\r\n            <MenuItem value=\"network\">Red</MenuItem>\r\n            <MenuItem value=\"bluetooth\">Bluetooth</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl fullWidth size=\"small\">\r\n          <InputLabel>Tamaño de papel</InputLabel>\r\n          <Select value={form.paperSize} onChange={handleChange('paperSize')} label=\"Tamaño de papel\">\r\n            <MenuItem value=\"58mm\">58mm</MenuItem>\r\n            <MenuItem value=\"80mm\">80mm</MenuItem>\r\n            <MenuItem value=\"A4\">A4</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField label=\"Copias\" type=\"number\" fullWidth size=\"small\" value={form.copies} onChange={handleChange('copies')} />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button variant=\"contained\" onClick={handleSave}>Guardar</Button>\r\n          <Button variant=\"outlined\" onClick={onClose}>Cerrar</Button>\r\n        </Stack>\r\n      </Stack>\r\n      <Snackbar open={snackbar.open} autoHideDuration={3000} onClose={() => setSnackbar({ ...snackbar, open: false })}>\r\n        <Alert severity={snackbar.severity}>{snackbar.message}</Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ImpresoraConfigModal; "],"names":["_ref","onClose","form","setForm","useState","type","connection","paperSize","copies","snackbar","setSnackbar","open","message","severity","handleChange","field","e","target","value","_jsxs","Box","sx","p","children","_jsx","Typography","variant","mb","Stack","spacing","FormControl","fullWidth","size","InputLabel","Select","onChange","label","MenuItem","TextField","direction","mt","Button","onClick","handleSave","Snackbar","autoHideDuration","Alert"],"sourceRoot":""}