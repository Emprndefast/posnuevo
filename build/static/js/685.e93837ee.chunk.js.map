{"version":3,"file":"static/js/685.e93837ee.chunk.js","mappings":"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","sources":["components/settings/modals/GeneralConfigModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Typography, TextField, Button, Stack, FormControl, InputLabel, Select, MenuItem, Snackbar, Alert, FormControlLabel, Switch } from '@mui/material';\r\n\r\nconst GeneralConfigModal = ({ onClose }) => {\r\n  const [form, setForm] = useState({\r\n    businessType: '',\r\n    reportHeader: '',\r\n    backupPath: '',\r\n    decimalPlaces: 2,\r\n    cardCommission: 0,\r\n    autoBackup: false\r\n  });\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n\r\n  const handleChange = (field) => (e) => {\r\n    setForm({ ...form, [field]: e.target.type === 'checkbox' ? e.target.checked : e.target.value });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Aquí iría la lógica de guardado real (Firestore, etc.)\r\n    setSnackbar({ open: true, message: 'Configuración guardada correctamente', severity: 'success' });\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n        Configuración General\r\n      </Typography>\r\n      <Stack spacing={2}>\r\n        <FormControl fullWidth size=\"small\">\r\n          <InputLabel>Giro comercial</InputLabel>\r\n          <Select value={form.businessType} onChange={handleChange('businessType')} label=\"Giro comercial\">\r\n            <MenuItem value=\"ACCESORIOS\">ACCESORIOS</MenuItem>\r\n            <MenuItem value=\"ROPA\">ROPA</MenuItem>\r\n            <MenuItem value=\"ALIMENTOS\">ALIMENTOS</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl fullWidth size=\"small\">\r\n          <InputLabel>Encabezado de reportes</InputLabel>\r\n          <Select value={form.reportHeader} onChange={handleChange('reportHeader')} label=\"Encabezado de reportes\">\r\n            <MenuItem value=\"USAR INFORMACIÓN DE EMPRESA\">USAR INFORMACIÓN DE EMPRESA</MenuItem>\r\n            <MenuItem value=\"PERSONALIZADO\">PERSONALIZADO</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField label=\"Ruta para respaldo\" fullWidth size=\"small\" value={form.backupPath} onChange={handleChange('backupPath')} />\r\n        <TextField label=\"Decimales de moneda\" type=\"number\" fullWidth size=\"small\" value={form.decimalPlaces} onChange={handleChange('decimalPlaces')} />\r\n        <TextField label=\"% comisión Tarjeta\" type=\"number\" fullWidth size=\"small\" value={form.cardCommission} onChange={handleChange('cardCommission')} />\r\n        <FormControlLabel control={<Switch checked={form.autoBackup} onChange={handleChange('autoBackup')} />} label=\"Siempre Respaldar BD al salir\" />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button variant=\"contained\" onClick={handleSave}>Guardar</Button>\r\n          <Button variant=\"outlined\" onClick={onClose}>Cerrar</Button>\r\n        </Stack>\r\n      </Stack>\r\n      <Snackbar open={snackbar.open} autoHideDuration={3000} onClose={() => setSnackbar({ ...snackbar, open: false })}>\r\n        <Alert severity={snackbar.severity}>{snackbar.message}</Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GeneralConfigModal; "],"names":["_ref","onClose","form","setForm","useState","businessType","reportHeader","backupPath","decimalPlaces","cardCommission","autoBackup","snackbar","setSnackbar","open","message","severity","handleChange","field","e","target","type","checked","value","_jsxs","Box","sx","p","children","_jsx","Typography","variant","mb","Stack","spacing","FormControl","fullWidth","size","InputLabel","Select","onChange","label","MenuItem","TextField","FormControlLabel","control","Switch","direction","mt","Button","onClick","handleSave","Snackbar","autoHideDuration","Alert"],"sourceRoot":""}